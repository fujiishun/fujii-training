"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isAxiosHeaders = exports.isTransformable = exports.isPlainObject = exports.isFormData = exports.isURLSearchParams = void 0;
var isURLSearchParams = function (value) {
    return (typeof URLSearchParams !== 'undefined' && value instanceof URLSearchParams);
};
exports.isURLSearchParams = isURLSearchParams;
var isFormData = function (value) {
    return typeof FormData !== 'undefined' && value instanceof FormData;
};
exports.isFormData = isFormData;
var isPlainObject = function (value) {
    if (value == null) {
        return false;
    }
    var proto = Object.getPrototypeOf(value);
    return proto === null || proto === Object.prototype;
};
exports.isPlainObject = isPlainObject;
var isTransformable = function (value) {
    return (Array.isArray(value) ||
        (0, exports.isPlainObject)(value) ||
        (0, exports.isFormData)(value) ||
        (0, exports.isURLSearchParams)(value));
};
exports.isTransformable = isTransformable;
// Dirty hack for unexported AxiosHeaders.
// Don't handle it as Transformable to reduce the scope of the impact.
var isAxiosHeaders = function (value) {
    var _a, _b;
    if (value == null) {
        return false;
    }
    return ((_b = (_a = Object.getPrototypeOf(value)) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name) === 'AxiosHeaders';
};
exports.isAxiosHeaders = isAxiosHeaders;
