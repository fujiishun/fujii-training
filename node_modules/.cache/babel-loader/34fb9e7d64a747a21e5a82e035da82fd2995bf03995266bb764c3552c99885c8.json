{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/reactapp/src/components/pages/TestPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"App\";\n\n// とりあえず認証済みユーザーの名前やメールアドレスを表示\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TestPage = () => {\n  _s();\n  const {\n    isSignedIn,\n    currentUser\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isSignedIn && currentUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u767B\\u9332\\u60C5\\u5831\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u540D\\u524D: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u30CB\\u30C3\\u30AF\\u30CD\\u30FC\\u30E0: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.nickname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9: \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signin\",\n        children: \"\\u30B5\\u30A4\\u30F3\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n_s(TestPage, \"uBvZeDaeBdXI5cRuCHLVFnu/Ct4=\");\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useContext","Link","AuthContext","TestPage","isSignedIn","currentUser","name","nickname","email"],"sources":["/usr/src/app/reactapp/src/components/pages/TestPage.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"App\";\n\n// とりあえず認証済みユーザーの名前やメールアドレスを表示\nconst TestPage: React.FC = () => {\n  const { isSignedIn, currentUser } = useContext(AuthContext);\n  return (\n    <>\n      {isSignedIn && currentUser ? (\n        <>\n          <h1>登録情報</h1>\n          <h2>名前: {currentUser?.name}</h2>\n          <h2>ニックネーム: {currentUser?.nickname}</h2>\n          <h2>メールアドレス: {currentUser?.email}</h2>\n          <hr />\n          <Link to=\"/signin\">サインイン</Link>\n        </>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default TestPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,KAAK;;AAEjC;AAAA;AAAA;AACA,MAAMC,QAAkB,GAAG,MAAM;EAAA;EAC/B,MAAM;IAAEC,UAAU;IAAEC;EAAY,CAAC,GAAGL,UAAU,CAACE,WAAW,CAAC;EAC3D,oBACE;IAAA,UACGE,UAAU,IAAIC,WAAW,gBACxB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,eACb;QAAA,6BAASA,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEC,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAChC;QAAA,qDAAaD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEE,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACxC;QAAA,2DAAcF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACtC;QAAA;QAAA;QAAA;MAAA,QAAM,eACN,QAAC,IAAI;QAAC,EAAE,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa;IAAA,gBAC9B,gBAEH;EACD,iBACA;AAEP,CAAC;AAAC,GAlBIL,QAAkB;AAAA,KAAlBA,QAAkB;AAoBxB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}