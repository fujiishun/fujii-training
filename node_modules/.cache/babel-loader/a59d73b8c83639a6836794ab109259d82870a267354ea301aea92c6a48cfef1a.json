{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/reactapp/src/components/pages/SignUp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { AuthContext } from \"App\";\nimport AlertMessage from \"components/utils/AlertMessage\";\nimport { signUp } from \"lib/api/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  submitBtn: {\n    paddingTop: theme.spacing(2),\n    textAlign: \"right\",\n    flexGrow: 1,\n    textTransform: \"none\"\n  },\n  header: {\n    textAlign: \"center\"\n  },\n  card: {\n    padding: theme.spacing(2),\n    maxWidth: 400\n  }\n}));\n\n// サインアップ用ページ\nconst SignUp = () => {\n  _s();\n  const classes = useStyles();\n  const histroy = useHistory();\n  const {\n    setIsSignedIn,\n    setCurrentUser\n  } = useContext(AuthContext);\n  const [nickname, setNickname] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [alertMessageOpen, setAlertMessageOpen] = useState(false);\n\n  // ボタン押下時\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = {\n      nickname: nickname,\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation\n    };\n    try {\n      const res = await signUp(data);\n      if (res.status === 200) {\n        // アカウント作成と同時にサインインさせてしまう\n        // 本来であればメール確認などを挟むべきだが、今回はサンプルなので\n        Cookies.set(\"_access_token\", JSON.stringify(res.headers[\"access-token\"]));\n        Cookies.set(\"_client\", JSON.stringify(res.headers[\"client\"]));\n        Cookies.set(\"_uid\", JSON.stringify(res.headers[\"uid\"]));\n        // サインイン時の処理\n        setIsSignedIn(true);\n        setCurrentUser(res.data.data);\n        histroy.push(\"/Home\");\n      } else {\n        setAlertMessageOpen(true);\n      }\n    } catch (err) {\n      setAlertMessageOpen(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: classes.header,\n          title: \"\\u30B5\\u30A4\\u30F3\\u30A2\\u30C3\\u30D7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            label: \"ID\",\n            value: name,\n            margin: \"dense\",\n            onChange: event => setName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            label: \"\\u30CB\\u30C3\\u30AF\\u30CD\\u30FC\\u30E0\",\n            value: nickname,\n            margin: \"dense\",\n            onChange: event => setNickname(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            label: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n            value: email,\n            margin: \"dense\",\n            onChange: event => setEmail(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n            type: \"password\",\n            value: password,\n            margin: \"dense\",\n            autoComplete: \"current-password\",\n            onChange: event => setPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            required: true,\n            fullWidth: true,\n            label: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\uFF08\\u78BA\\u8A8D\\u7528\\uFF09\",\n            type: \"password\",\n            value: passwordConfirmation,\n            margin: \"dense\",\n            autoComplete: \"current-password\",\n            onChange: event => setPasswordConfirmation(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.submitBtn,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"outlined\",\n              color: \"primary\",\n              disabled: !name || !email || !password || !passwordConfirmation ? true : false,\n              onClick: handleSubmit,\n              children: \"\\u9001\\u4FE1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertMessage // エラーが発生した場合はアラートを表示\n    , {\n      open: alertMessageOpen,\n      setOpen: setAlertMessageOpen,\n      severity: \"error\",\n      message: \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u304B\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u304C\\u9593\\u9055\\u3063\\u3066\\u3044\\u307E\\u3059\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUp, \"KE7GuvRBfcIX2yR7x9UBpQ09HNU=\", false, function () {\n  return [useStyles, useHistory];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useContext","useHistory","Cookies","makeStyles","TextField","Card","CardContent","CardHeader","Button","AuthContext","AlertMessage","signUp","useStyles","theme","submitBtn","paddingTop","spacing","textAlign","flexGrow","textTransform","header","card","padding","maxWidth","SignUp","classes","histroy","setIsSignedIn","setCurrentUser","nickname","setNickname","name","setName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","alertMessageOpen","setAlertMessageOpen","handleSubmit","e","preventDefault","data","res","status","set","JSON","stringify","headers","push","err","event","target","value"],"sources":["/usr/src/app/reactapp/src/components/pages/SignUp.tsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { AuthContext } from \"App\";\nimport AlertMessage from \"components/utils/AlertMessage\";\nimport { signUp } from \"lib/api/auth\";\nimport { SignUpData } from \"interfaces/index\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  submitBtn: {\n    paddingTop: theme.spacing(2),\n    textAlign: \"right\",\n    flexGrow: 1,\n    textTransform: \"none\",\n  },\n  header: {\n    textAlign: \"center\",\n  },\n  card: {\n    padding: theme.spacing(2),\n    maxWidth: 400,\n  },\n}));\n\n// サインアップ用ページ\nconst SignUp: React.FC = () => {\n  const classes = useStyles();\n  const histroy = useHistory();\n  const { setIsSignedIn, setCurrentUser } = useContext(AuthContext);\n  const [nickname, setNickname] = useState<string>(\"\");\n  const [name, setName] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState<string>(\"\");\n  const [alertMessageOpen, setAlertMessageOpen] = useState<boolean>(false);\n\n  // ボタン押下時\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    const data: SignUpData = {\n      nickname: nickname,\n      name: name,\n      email: email,\n      password: password,\n      passwordConfirmation: passwordConfirmation,\n    };\n\n    try {\n      const res = await signUp(data);\n      if (res.status === 200) {\n        // アカウント作成と同時にサインインさせてしまう\n        // 本来であればメール確認などを挟むべきだが、今回はサンプルなので\n        Cookies.set(\n          \"_access_token\",\n          JSON.stringify(res.headers[\"access-token\"])\n        );\n        Cookies.set(\"_client\", JSON.stringify(res.headers[\"client\"]));\n        Cookies.set(\"_uid\", JSON.stringify(res.headers[\"uid\"]));\n        // サインイン時の処理\n        setIsSignedIn(true);\n        setCurrentUser(res.data.data);\n        histroy.push(\"/Home\");\n      } else {\n        setAlertMessageOpen(true);\n      }\n    } catch (err) {\n      setAlertMessageOpen(true);\n    }\n  };\n\n  return (\n    <>\n      <form noValidate autoComplete=\"off\">\n        <Card className={classes.card}>\n          <CardHeader className={classes.header} title=\"サインアップ\" />\n          <CardContent>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"ID\"\n              value={name}\n              margin=\"dense\"\n              onChange={(event) => setName(event.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"ニックネーム\"\n              value={nickname}\n              margin=\"dense\"\n              onChange={(event) => setNickname(event.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"メールアドレス\"\n              value={email}\n              margin=\"dense\"\n              onChange={(event) => setEmail(event.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"パスワード\"\n              type=\"password\"\n              value={password}\n              margin=\"dense\"\n              autoComplete=\"current-password\"\n              onChange={(event) => setPassword(event.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"パスワード（確認用）\"\n              type=\"password\"\n              value={passwordConfirmation}\n              margin=\"dense\"\n              autoComplete=\"current-password\"\n              onChange={(event) => setPasswordConfirmation(event.target.value)}\n            />\n            <div className={classes.submitBtn}>\n              <Button\n                type=\"submit\"\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={\n                  !name || !email || !password || !passwordConfirmation\n                    ? true\n                    : false\n                }\n                onClick={handleSubmit}\n              >\n                送信\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </form>\n      <AlertMessage // エラーが発生した場合はアラートを表示\n        open={alertMessageOpen}\n        setOpen={setAlertMessageOpen}\n        severity=\"error\"\n        message=\"メールアドレスかパスワードが間違っています\"\n      />\n    </>\n  );\n};\n\nexport default SignUp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}